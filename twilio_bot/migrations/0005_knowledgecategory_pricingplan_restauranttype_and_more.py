# Generated by Django 4.2.23 on 2025-08-11 07:49

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('twilio_bot', '0004_conversation_title_alter_message_text_input_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='KnowledgeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category_type', models.CharField(choices=[('services', 'Services'), ('pricing', 'Pricing'), ('features', 'Features'), ('implementation', 'Implementation'), ('faq', 'FAQ'), ('restaurant_types', 'Restaurant Types'), ('technical', 'Technical Specifications'), ('success_stories', 'Success Stories')], max_length=20)),
                ('description', models.TextField(blank=True, help_text='Brief description of this category')),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Knowledge Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PricingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('plan_type', models.CharField(choices=[('basic', 'Basic'), ('professional', 'Professional'), ('enterprise', 'Enterprise'), ('custom', 'Custom')], max_length=20)),
                ('price', models.CharField(help_text='e.g., $99/month, Custom pricing', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('features', models.TextField(help_text='One feature per line')),
                ('call_limit', models.CharField(blank=True, help_text='e.g., Up to 500 calls/month', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RestaurantType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('solution_details', models.TextField(blank=True, help_text='Specific solution details for this restaurant type')),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TechnicalSpec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(limit_choices_to={'category_type': 'technical'}, on_delete=django.db.models.deletion.CASCADE, related_name='tech_specs', to='twilio_bot.knowledgecategory')),
            ],
            options={
                'verbose_name': 'Technical Specification',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SuccessStory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant_name', models.CharField(max_length=100)),
                ('story', models.TextField()),
                ('metrics', models.TextField(blank=True, help_text='Key metrics/improvements (one per line)')),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('restaurant_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='twilio_bot.restauranttype')),
            ],
            options={
                'verbose_name_plural': 'Success Stories',
                'ordering': ['order', 'restaurant_name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(limit_choices_to={'category_type': 'features'}, on_delete=django.db.models.deletion.CASCADE, related_name='features', to='twilio_bot.knowledgecategory')),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='KnowledgeItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(help_text='Main content/answer')),
                ('keywords', models.TextField(blank=True, help_text='Comma-separated keywords for matching queries')),
                ('confidence_boost', models.IntegerField(default=0, help_text='Boost confidence score by this amount (-50 to +50)', validators=[django.core.validators.MinValueValidator(-50), django.core.validators.MaxValueValidator(50)])),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='twilio_bot.knowledgecategory')),
            ],
            options={
                'ordering': ['category', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=300)),
                ('answer', models.TextField()),
                ('keywords', models.TextField(blank=True, help_text='Comma-separated keywords for matching')),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(limit_choices_to={'category_type': 'faq'}, on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='twilio_bot.knowledgecategory')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['order', 'question'],
            },
        ),
    ]
